{"version":3,"sources":["assets/moviedb.jpg","assets/home.png","components/footer/Footer.js","components/search/Searchbar.js","components/navbar/Navbar.js","components/card-movie-tv/CardMovieTV.js","api/axios.js","components/row/Row.js","components/selection/Selection.js","api/request.js","components/text-section/TextSection.js","views/home/Homepage.js","components/banner-details/BannerDetails.js","components/card-person/CardPerson.js","components/row-cast/RowCast.js","components/card-landscape/CardLanscape.js","components/row-recommended/RowRecommended.js","views/details-movie-tv/DetailMovieTv.js","components/banner-person/BannerPerson.js","components/card-playingas/CardPlaying.js","components/row-playing/RowPlaying.js","views/detail-person/DetailPerson.js","components/helper/ScrollToTop.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Footer","className","href","target","src","Logo","alt","Searchbar","useState","style","setStyle","useEffect","window","addEventListener","scrollY","removeEventListener","type","placeholder","Navbar","shadow","setshadow","to","CardMovieTV","image","name","id","pathname","state","identification","instance","axios","create","baseURL","Row","genre","url","movies","setmovies","a","get","then","result","data","results","request","fetchData","map","key","poster_path","original_title","vote","vote_average","Selection","API_KEY","fetchTrending","fetchTrendingMovie","fetchTrendingTV","fetchNetflixOri","fetchMoviePlaying","fetchMovieUpcoming","TextSection","title","subtitle","Homepage","backgroundImage","background","BannerDetails","s","n","movie","setmovie","genres","setGenres","backgroundSize","backdrop_path","backgroundPosition","String","release_date","substring","overview","CardPerson","photo","character","trimString","string","length","RowCast","cast","setCast","cast_id","profile_path","CardLanscape","RowRecommended","recommendation","setRecommendation","DetailMovieTv","props","match","params","BannerPerson","person","setperson","console","log","biography","known_for_department","birthday","place_of_birth","CardPlaying","poster","RowPlaying","playas","setPlayas","DetailPerson","withRouter","history","unlisten","listen","scrollTo","App","path","component","exact","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.fc28b049.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/moviedb.468ddc62.jpg\";","module.exports = __webpack_public_path__ + \"static/media/home.37c3a95b.png\";","import React from \"react\";\r\nimport Logo from \"../../assets/moviedb.jpg\";\r\nimport { MdEmail } from \"react-icons/md\";\r\nimport { FaTwitter, FaLinkedin, FaGithub } from \"react-icons/fa\";\r\nimport \"./Footer.scss\";\r\nconst Footer = () => {\r\n  return (\r\n    <>\r\n      <div className=\"footer\">\r\n        <div className=\"moviedb\">\r\n          <h3>This Website Powered by</h3>\r\n          <a href=\"https://developers.themoviedb.org/3\" target=\"blank\">\r\n            <img src={Logo} alt=\"MovieDB\" className=\"logo\" />\r\n          </a>\r\n        </div>\r\n        <div className=\"description\">\r\n          <h3>\r\n            Motvie - Movies and TV Show <br /> Website Version{\" \"}\r\n          </h3>\r\n          <p>\r\n            This website is build to user easily get information of millions of\r\n            Movies and TV Show with simple UI to get a new experience of movie\r\n            website. with a simple UI of information that very useful and easily\r\n            to read.\r\n          </p>\r\n        </div>\r\n        <div className=\"contact\">\r\n          <h3>Contact Me</h3>\r\n          <div className=\"socmed\">\r\n            <div className=\"media\">\r\n              <MdEmail className=\"icon\" />\r\n              <a href=\"https://github.com/ragilhadi\" target=\"blank\">\r\n                Email\r\n              </a>\r\n            </div>\r\n            <div className=\"media\">\r\n              <FaTwitter className=\"icon\" />\r\n              <a href=\"https://twitter.com/ragilhadi_\" target=\"blank\">\r\n                Twitter\r\n              </a>\r\n            </div>\r\n            <div className=\"media\">\r\n              <FaLinkedin className=\"icon\" />\r\n              <a\r\n                href=\"https://www.linkedin.com/in/ragil-hadi-prasetyo/\"\r\n                target=\"blank\"\r\n              >\r\n                Linkedin\r\n              </a>\r\n            </div>\r\n            <div className=\"media\">\r\n              <FaGithub className=\"icon\" />\r\n              <a href=\"https://github.com/ragilhadi\" target=\"blank\">\r\n                Github\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"copyright\">\r\n        <p className=\"one\">Design & Develop by Ragil Prasetyo</p>\r\n        <p className=\"two\">Created during Quarantine 2020</p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Searchbar.scss\";\r\nimport { MdSearch } from \"react-icons/md\";\r\n\r\nconst Searchbar = () => {\r\n  const [style, setStyle] = useState(false);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", () => {\r\n      if (window.scrollY > 80) {\r\n        setStyle(true);\r\n      } else setStyle(false);\r\n    });\r\n    return () => {\r\n      window.removeEventListener(\"scroll\");\r\n    };\r\n  }, []);\r\n  return (\r\n    <div className={`${style && \"transparent\"} search-container`}>\r\n      <input\r\n        type=\"text\"\r\n        className=\"search-bar\"\r\n        placeholder=\"What are you looking for?\"\r\n      />\r\n      <MdSearch className={`icon-search ${style && \"icon-colorized\"}`} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Searchbar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Navbar.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Searchbar from \"../search/Searchbar\";\r\n\r\nconst Navbar = () => {\r\n  const [shadow, setshadow] = useState(false);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", () => {\r\n      if (window.scrollY > 80) {\r\n        setshadow(true);\r\n      } else setshadow(false);\r\n    });\r\n    return () => {\r\n      window.removeEventListener(\"scroll\");\r\n    };\r\n  }, []);\r\n  return (\r\n    <div className={`navbar-container ${shadow && \"nav-shadow\"}`}>\r\n      <div className=\"logo\">\r\n        <Link to=\"/\" className=\"motvie\">\r\n          Motvie\r\n        </Link>\r\n      </div>\r\n      <div className=\"section-2\">\r\n        <Searchbar />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport \"./CardMovieTV.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nconst CardMovieTV = ({ image, name, id }) => {\r\n  return (\r\n    <div className=\"card-movieTV\">\r\n      <Link\r\n        to={{\r\n          pathname: `/detail/${id}`,\r\n          state: {\r\n            identification: id,\r\n          },\r\n        }}\r\n      >\r\n        <img src={`${base_url}${image}`} alt={name} className=\"poster\" />\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardMovieTV;\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3\",\r\n});\r\n\r\nexport default instance;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Row.scss\";\r\nimport CardMovieTV from \"../card-movie-tv/CardMovieTV\";\r\nimport axios from \"../../api/axios\";\r\n\r\nconst Row = ({ type, genre, url }) => {\r\n  const [movies, setmovies] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios\r\n        .get(url)\r\n        .then((result) => setmovies(result.data.results));\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, [url]);\r\n\r\n  return (\r\n    <div className=\"row-container\">\r\n      <div className=\"scroll-container\">\r\n        {movies.map((data) => (\r\n          <CardMovieTV\r\n            key={data.id}\r\n            image={data.poster_path}\r\n            name={data.original_title}\r\n            id={data.id}\r\n            vote={data.vote_average}\r\n          />\r\n        ))}\r\n        {/* {movies.map((data) => (\r\n          <CardMovieTV\r\n            key={data.id}\r\n            image={data.poster_path}\r\n            name={data.original_title}\r\n            id={data.id}\r\n            vote={data.vote_average}\r\n          />\r\n        ))} */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Row;\r\n","import React from \"react\";\r\nimport { MdMovie, MdSlideshow, MdPerson, MdCollections } from \"react-icons/md\";\r\nimport \"./Selection.scss\";\r\n\r\nconst Selection = () => {\r\n  return (\r\n    <div className=\"selection-container\">\r\n      <div className=\"selction-option\">\r\n        <MdMovie className=\"logo\" />\r\n        <p>Movies</p>\r\n      </div>\r\n      <div className=\"selction-option\">\r\n        <MdSlideshow className=\"logo\" />\r\n        <p>TV Show</p>\r\n      </div>\r\n      <div className=\"selction-option\">\r\n        <MdPerson className=\"logo\" />\r\n        <p>Person</p>\r\n      </div>\r\n      <div className=\"selction-option\">\r\n        <MdCollections className=\"logo\" />\r\n        <p>Collection</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Selection;\r\n","const API_KEY = \"8331c0e63f02372a473a46db041c13db\";\r\n\r\nconst request = {\r\n  fetchTrending: `/trending/all/day?api_key=${API_KEY}`,\r\n  fetchTrendingMovie: `/trending/movie/week?api_key=${API_KEY}`,\r\n  fetchTrendingTV: `/trending/tv/week?api_key=${API_KEY}`,\r\n  fetchNetflixOri: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n  fetchMoviePlaying: `/movie/now_playing?api_key=${API_KEY}&language=en-US&page=1`,\r\n  fetchMovieUpcoming: `/movie/upcoming?api_key=${API_KEY}&language=en-US&page=1`,\r\n};\r\n\r\nexport default request;\r\n","import React from \"react\";\r\nimport \"./TextSection.scss\";\r\n\r\nconst TextSection = ({ title, subtitle }) => {\r\n  return (\r\n    <div className=\"text-container\">\r\n      <h2 className=\"title\">{title}</h2>\r\n      <h3 className=\"subtitle\">{subtitle}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextSection;\r\n","import React from \"react\";\r\nimport Row from \"../../components/row/Row\";\r\nimport Selection from \"../../components/selection/Selection\";\r\nimport request from \"../../api/request\";\r\nimport \"./Homepage.scss\";\r\nimport background from \"../../assets/home.png\";\r\nimport TextSection from \"../../components/text-section/TextSection\";\r\n\r\nconst Homepage = () => {\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"backdrop-home\"\r\n        style={{\r\n          backgroundImage: `url(${background})`,\r\n        }}\r\n      >\r\n        <div className=\"header\">\r\n          <h1>\r\n            Let's Discover <br />\r\n            Million <span className=\"important\">Movies</span> and{\" \"}\r\n            <span className=\"important\">TV Shows</span> <br />\r\n            Right Here.\r\n          </h1>\r\n        </div>\r\n        <div className=\"fadebackground\" />\r\n      </div>\r\n      <div>\r\n        <TextSection\r\n          title=\"Netflix Original\"\r\n          subtitle=\"Discover your favorite category of section\"\r\n        />\r\n        <Row url={request.fetchNetflixOri} />\r\n        <TextSection\r\n          title=\"Trending Movies & TV Shows\"\r\n          subtitle=\"Discover your favorite category of section\"\r\n        />\r\n        <Row url={request.fetchTrending} />\r\n        <TextSection\r\n          title=\"Trending Movies & TV Shows\"\r\n          subtitle=\"Discover your favorite category of section\"\r\n        />\r\n        <Selection />\r\n        <TextSection\r\n          title=\"Movies Now Playing\"\r\n          subtitle=\"Discover your favorite category of section\"\r\n        />\r\n        <Row url={request.fetchMoviePlaying} />\r\n        <TextSection\r\n          title=\"Movies Upcoming\"\r\n          subtitle=\"Discover your favorite category of section\"\r\n        />\r\n        <Row url={request.fetchMovieUpcoming} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./BannerDetails.scss\";\r\nimport axios from \"../../api/axios\";\r\nimport { MdPlayArrow } from \"react-icons/md\";\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nconst BannerDetails = ({ id }) => {\r\n  const [movie, setmovie] = useState([]);\r\n  const [genres, setGenres] = useState([]);\r\n  const url = `https://api.themoviedb.org/3/movie/${id}?api_key=8331c0e63f02372a473a46db041c13db&language=en-US`;\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(url);\r\n      setmovie(request.data);\r\n      setGenres(request.data.genres);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, [url]);\r\n  function trimString(s, n) {\r\n    return s.substring(0, n);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"banner\"\r\n      style={{\r\n        backgroundSize: \"cover\",\r\n        backgroundImage: `url(${base_url}${movie.backdrop_path})`,\r\n        backgroundPosition: \"iherit\",\r\n      }}\r\n    >\r\n      <div className=\"flexbox\">\r\n        <div className=\"banner-details\">\r\n          <h1 className=\"title\">\r\n            {movie.title}\r\n            <span className=\"year\">\r\n              ({trimString(String(movie.release_date), 4)})\r\n            </span>\r\n          </h1>\r\n          <div className=\"genre-duration\">\r\n            <div className=\"genre-duration-detail\">\r\n              <div className=\"little-circle\"></div>\r\n              {genres.map((data) => (\r\n                <p className=\"genre-duration-detail__text__genre\">{`${data.name}`}</p>\r\n              ))}\r\n            </div>\r\n            <div className=\"genre-duration-detail\">\r\n              <div className=\"little-circle\"></div>\r\n              <p className=\"genre-duration-detail__text\">2h 4m</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"rating-trailer\">\r\n            <div className=\"rating-trailer-detail\">\r\n              <div className=\"rounded-icon\">\r\n                <p>{movie.vote_average}</p>\r\n              </div>\r\n              <p className=\"rating-trailer-detail__text\">Score</p>\r\n            </div>\r\n            <div className=\"rating-trailer-detail\">\r\n              <div className=\"rounded-icon\">\r\n                <MdPlayArrow className=\"play-icon\" />\r\n              </div>\r\n              <p className=\"rating-trailer-detail__text\">Play Trailer</p>\r\n            </div>\r\n          </div>\r\n          <p className=\"description\">{movie.overview}</p>\r\n        </div>\r\n        <div className=\"banner-poster\">\r\n          <img\r\n            src={`${base_url}${movie.poster_path}`}\r\n            alt=\"movie poster\"\r\n            className=\"poster\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"fadebackground\" />\r\n      <div className=\"linierGradient\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BannerDetails;\r\n","import React from \"react\";\r\nimport \"./CardPerson.scss\";\r\n\r\nconst CardPerson = ({ photo, name, character }) => {\r\n  const base_url = \"https://image.tmdb.org/t/p/original/\";\r\n  function trimString(string, n) {\r\n    if (string.length > n) {\r\n      return string.substring(0, n) + \"...\";\r\n    } else {\r\n      return string.substring(0, n);\r\n    }\r\n  }\r\n  return (\r\n    <div\r\n      className=\"card-person\"\r\n      style={{\r\n        backgroundSize: \"cover\",\r\n        backgroundImage: `url(${base_url}${photo})`,\r\n        backgroundPosition: \"iherit\",\r\n      }}\r\n    >\r\n      <div className=\"details\">\r\n        <p className=\"name-cast\">{trimString(name, 20)}</p>\r\n        <p className=\"name-real\">{trimString(character, 20)}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardPerson;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./RowCast.scss\";\r\nimport axios from \"../../api/axios\";\r\nimport CardPerson from \"../card-person/CardPerson\";\r\n\r\nconst RowCast = ({ id }) => {\r\n  const [cast, setCast] = useState([]);\r\n  const url = `https://api.themoviedb.org/3/movie/${id}/credits?api_key=8331c0e63f02372a473a46db041c13db`;\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(url);\r\n      setCast(request.data.cast);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, [url]);\r\n  return (\r\n    <div className=\"row-cast-container\">\r\n      <div className=\"scroll-container\">\r\n        {cast.map((data) => (\r\n          <CardPerson\r\n            key={data.cast_id}\r\n            photo={data.profile_path}\r\n            character={data.character}\r\n            name={data.name}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RowCast;\r\n","import React from \"react\";\r\nimport \"./CardLanscape.scss\";\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nconst CardLanscape = ({ photo, name, overview }) => {\r\n  function trimString(string, n) {\r\n    return string.substring(0, n) + \"...\";\r\n  }\r\n  return (\r\n    <div className=\"card-lanscape\">\r\n      <img src={`${base_url}${photo}`} className=\"image\" alt=\"backdrop\" />\r\n      <div className=\"details-card\">\r\n        <p className=\"title\">{name}</p>\r\n        <p className=\"description\">{trimString(String(overview), 80)}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardLanscape;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"../../api/axios\";\r\nimport CardLanscape from \"../card-landscape/CardLanscape\";\r\nimport \"./RowRecommended.scss\";\r\n\r\nconst RowRecommended = ({ id }) => {\r\n  const [recommendation, setRecommendation] = useState([]);\r\n  const url = `https://api.themoviedb.org/3/movie/${id}/recommendations?api_key=8331c0e63f02372a473a46db041c13db&language=en-US&page=1`;\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(url);\r\n      setRecommendation(request.data.results);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, [url]);\r\n  return (\r\n    <div className=\"row-recommended-container\">\r\n      <div className=\"scroll-container\">\r\n        {recommendation.map((data) => (\r\n          <CardLanscape\r\n            key={data.cast_id}\r\n            photo={data.backdrop_path}\r\n            overview={data.overview}\r\n            name={data.original_title}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RowRecommended;\r\n","import React from \"react\";\r\nimport BannerDetails from \"../../components/banner-details/BannerDetails\";\r\nimport TextSection from \"../../components/text-section/TextSection\";\r\nimport RowCast from \"../../components/row-cast/RowCast\";\r\nimport RowRecommended from \"../../components/row-recommended/RowRecommended\";\r\n\r\nconst DetailMovieTv = (props) => {\r\n  const identification = props.match.params.id;\r\n  return (\r\n    <div>\r\n      <BannerDetails id={identification} />\r\n      <TextSection\r\n        title=\"Cast\"\r\n        subtitle=\"Discover your favorite category of section\"\r\n      />\r\n      <RowCast id={identification} />\r\n      <TextSection\r\n        title=\"Reccomendation\"\r\n        subtitle=\"Discover your favorite category of section\"\r\n      />\r\n      <RowRecommended id={identification} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DetailMovieTv;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"../../api/axios\";\r\nimport \"./BannerPerson.scss\";\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nconst BannerPerson = () => {\r\n  const [person, setperson] = useState([]);\r\n  const url =\r\n    \"https://api.themoviedb.org/3/person/10990?api_key=8331c0e63f02372a473a46db041c13db&language=en-US\";\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(url);\r\n      setperson(request.data);\r\n      console.log(request.data);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, [url]);\r\n  return (\r\n    <div className=\"person\">\r\n      <div className=\"person-container\">\r\n        <div className=\"poster\">\r\n          <img\r\n            src={`${base_url}${person.profile_path}`}\r\n            alt=\"profile_person\"\r\n            className=\"poster_image\"\r\n          />\r\n        </div>\r\n        <div className=\"details\">\r\n          <h1>{person.name}</h1>\r\n          <div className=\"biography\">\r\n            <h3>Biography</h3>\r\n            <p>{person.biography}</p>\r\n            <div className=\"additional\">\r\n              <div className=\"detail\">\r\n                <h4>Known For</h4>\r\n                <p>{person.known_for_department}</p>\r\n              </div>\r\n              <div className=\"detail\">\r\n                <h4>Birthday</h4>\r\n                <p>{person.birthday}</p>\r\n              </div>\r\n              <div className=\"detail\">\r\n                <h4>Place of Birth</h4>\r\n                <p>{person.place_of_birth}</p>\r\n              </div>\r\n              <div className=\"detail\">\r\n                <h4>Social Media</h4>\r\n                <p>Acting</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BannerPerson;\r\n","import React from \"react\";\r\nimport \"./CardPlaying.scss\";\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nconst CardPlaying = ({ character, poster, movie }) => {\r\n  return (\r\n    <div className=\"card-playing\">\r\n      <img src={`${base_url}${poster}`} className=\"image\" alt=\"backdrop\" />\r\n      <div className=\"details-card\">\r\n        <p className=\"title\">Playing as</p>\r\n        <p className=\"description\">{character}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardPlaying;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"../../api/axios\";\r\nimport CardPlaying from \"../card-playingas/CardPlaying\";\r\n\r\nconst RowPlaying = () => {\r\n  const [playas, setPlayas] = useState([]);\r\n  const url =\r\n    \"https://api.themoviedb.org/3/person/10990/combined_credits?api_key=8331c0e63f02372a473a46db041c13db&language=en-US\";\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(url);\r\n      setPlayas(request.data.cast);\r\n      console.log(request.data.cast);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, [url]);\r\n  return (\r\n    <div className=\"row-recommended-container\">\r\n      <div className=\"scroll-container\">\r\n        {playas.map((data) => (\r\n          <CardPlaying\r\n            key={data.cast_id}\r\n            movie={data.original_title}\r\n            poster={data.poster_path}\r\n            character={data.character}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RowPlaying;\r\n","import React from \"react\";\r\nimport BannerPerson from \"../../components/banner-person/BannerPerson\";\r\nimport TextSection from \"../../components/text-section/TextSection\";\r\nimport RowPlaying from \"../../components/row-playing/RowPlaying\";\r\n\r\nconst DetailPerson = () => {\r\n  return (\r\n    <div>\r\n      <BannerPerson />\r\n      <TextSection\r\n        title=\"Playing as\"\r\n        subtitle=\"Discover your favorite category of section\"\r\n      />\r\n      <RowPlaying />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DetailPerson;\r\n","import { useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nfunction ScrollToTop({ history }) {\r\n  useEffect(() => {\r\n    const unlisten = history.listen(() => {\r\n      window.scrollTo(0, 0);\r\n    });\r\n    return () => {\r\n      unlisten();\r\n    };\r\n  }, []);\r\n\r\n  return null;\r\n}\r\n\r\nexport default withRouter(ScrollToTop);\r\n","import React from \"react\";\r\nimport Footer from \"./components/footer/Footer\";\r\nimport Navbar from \"./components/navbar/Navbar\";\r\nimport Homepage from \"./views/home/Homepage\";\r\nimport DetailMovieTv from \"./views/details-movie-tv/DetailMovieTv\";\r\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\r\nimport DetailPerson from \"./views/detail-person/DetailPerson\";\r\nimport \"./app.css\";\r\nimport ScrollToTop from \"./components/helper/ScrollToTop\";\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"App\">\r\n        <ScrollToTop />\r\n        <Navbar />\r\n        <Switch>\r\n          <Route path=\"/\" component={Homepage} exact />\r\n          <Route path=\"/detail/:id\" component={DetailMovieTv} />\r\n          <Route path=\"/person/:id\" component={DetailPerson} />\r\n        </Switch>\r\n        <Footer />\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}